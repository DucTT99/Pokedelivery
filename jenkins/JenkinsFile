pipeline {
    agent any

    // triggers {
    //     githubPush()
    // }


    stages {

        stage('Lint Test') {
            steps {
                echo "Building branch: ${env.BRANCH_NAME}"
            }
        } 
// branch check


        stage('API Test') {
            steps {
                echo 'Checking out code...'
                sh """
                sudo apt update
                sudo apt install git
                """
                checkout scm
            }
        }
// checkout

        stage('Build') {
            when {
                expression {
                    return env.BRANCH_NAME != 'main'
                }
            }

            steps {
                sh '''
                if [ ! -d "$HOME/.nvm" ]; then
                    curl -fsSL https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
                fi

                export NVM_DIR="$HOME/.nvm"
                [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

                nvm install 22.5.1
                nvm use 22.5.1
                nvm alias default 22.5.1

                node -v
                npm -v
                '''
            }
        }
//setup nodejs
        stage('Package') {

            when {
                expression {
                    return env.BRANCH_NAME != 'main'
                }
            }

            steps {
                dir('api') {
                sh '''
                    export NVM_DIR="$HOME/.nvm"
                    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
                    nvm use 22.5.1

                    npm install
                '''
                }
            }
        }

 
        stage('Deploy') {

            when {
                expression {
                    return env.BRANCH_NAME != 'main'
                }
            }

            steps {
                dir("api") {
                    echo 'Building API...'
                    sh '''
                        export NVM_DIR="$HOME/.nvm"
                        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
                        node getPokemon/test.js
                    '''
                }
            }
        }

//build

    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    
        always {
            cleanWs()
        }

    }

}
