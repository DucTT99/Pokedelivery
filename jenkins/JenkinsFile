pipeline {
    agent any

    // triggers {
    //     githubPush()
    // }

    environment {
        NODE_VERSION = 'v22.5.1' // Change to your desired Node.js version
    }


    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out code...'
                checkout scm
            }
        }

        stage('Restore Cache') {
            steps {
                script {
                // Restore NVM and node_modules if available
                try {
                    unstash 'nvm-cache'
                    echo "‚úÖ Restored NVM cache"
                } catch (e) {
                    echo "‚ö†Ô∏è No NVM cache found"
                }

                try {
                    unstash 'npm-cache'
                    echo "‚úÖ Restored npm cache"
                } catch (e) {
                    echo "‚ö†Ô∏è No npm cache found"
                }
                }
            }
        }

        stage('Setup Node.js') {
            steps {
                sh '''
                if [ ! -d "$HOME/.nvm" ]; then
                    curl -fsSL https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
                fi

                export NVM_DIR="$HOME/.nvm"
                [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

                nvm install 22.5.1
                nvm use 22.5.1
                nvm alias default 22.5.1

                node -v
                npm -v
                '''
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('api') {
                sh '''
                    export NVM_DIR="$HOME/.nvm"
                    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
                    nvm use 22.5.1

                    npm ci
                '''
                }
            }
        }

        stage('Cache Artifacts') {
            steps {
                stash includes: '.nvm/**', name: 'nvm-cache'
                stash includes: 'api/node_modules/**', name: 'npm-cache'
                echo "üì¶ Cached NVM and npm dependencies"
            }
        }

 
        stage('Build') {
            steps {
                dir("api") {
                    echo 'Building API...'
                    sh '''
                        export NVM_DIR="$HOME/.nvm"
                        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
                        node getPokemon/test.js
                    '''
                }
            }
        }



    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    
        always {
            cleanWs()
        }

    }

}